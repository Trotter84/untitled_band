{"version":3,"sources":["components/menus/TopMenu.js","components/pages/Home.js","components/pages/About.js","components/pages/Social.js","components/pages/Tour.js","components/pages/Merch.js","components/App.js","serviceWorker.js","index.js"],"names":["Title","Styled","h1","Nav","Link","TitleMOBILE","NavMOBILE","TopMenu","id","to","className","Divider","Component","Home","About","Social","Tour","Merch","App","history","createHistory","document","title","this","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ohCAMA,IAAMA,EAAQC,IAAOC,GAAV,KAOLC,EAAMF,YAAOG,IAAPH,CAAH,KAWHI,EAAcJ,IAAOC,GAAV,KAOXI,EAAYL,YAAOG,IAAPH,CAAH,KAwDAM,E,iLA1CX,OACE,oCACE,yBAAKC,GAAG,wBACN,kBAACL,EAAD,CAAKM,GAAI,SAAUC,UAAU,cAA7B,SACA,kBAACC,EAAA,EAAD,MACA,6BACA,kBAACR,EAAD,CAAKM,GAAI,UAAWC,UAAU,cAA9B,UACA,kBAACC,EAAA,EAAD,MACA,6BACA,kBAAC,IAAD,CAAMF,GAAI,KACR,kBAACT,EAAD,CAAOQ,GAAG,gBAAV,kBAEF,6BACA,kBAACL,EAAD,CAAKM,GAAI,QAASC,UAAU,cAA5B,QACA,kBAACC,EAAA,EAAD,MACA,6BACA,kBAACR,EAAD,CAAKM,GAAI,SAAUC,UAAU,cAA7B,UAGF,yBAAKF,GAAG,8BACN,kBAAC,IAAD,CAAMC,GAAI,KACR,kBAACJ,EAAD,CAAaG,GAAG,sBAAhB,kBAEF,yBAAKA,GAAG,6BACN,kBAACF,EAAD,CAAWG,GAAI,SAAUC,UAAU,oBAAnC,SACA,kBAACC,EAAA,EAAD,MACA,wBAAID,UAAU,aACd,kBAACJ,EAAD,CAAWG,GAAI,UAAWC,UAAU,oBAApC,UACA,kBAACC,EAAA,EAAD,MACA,wBAAID,UAAU,aACd,kBAACJ,EAAD,CAAWG,GAAI,QAASC,UAAU,oBAAlC,QACA,kBAACC,EAAA,EAAD,MACA,wBAAID,UAAU,aACd,kBAACJ,EAAD,CAAWG,GAAI,SAAUC,UAAU,oBAAnC,gB,GAnCUE,aChCPC,E,iLANX,OACE,wBAAIL,GAAG,aAAP,Y,GAHaI,aCQJE,E,iLANX,OACE,wBAAIN,GAAG,gBAAP,a,GAHcI,aCQLG,E,iLANX,OACE,wBAAIP,GAAG,eAAP,c,GAHeI,aCQNI,E,iLANX,OACE,wBAAIR,GAAG,aAAP,Y,GAHaI,aCQJK,E,iLANX,OACE,wBAAIT,GAAG,cAAP,a,GAHcI,aCmDLM,E,YA5Bb,aAAe,IAAD,8BACZ,+CACKC,QAAUC,cAFH,E,iFAHZC,SAASC,MAAM,oB,8CASf,OACE,kBAAC,gBAAD,CAAeH,QAASI,KAAKJ,SAC3B,kBAAC,IAAD,CAAQA,QAASI,KAAKJ,SACpB,kBAAC,iBAAD,KACE,yBAAKX,GAAG,oBACN,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAIC,UAAWb,IACjC,kBAAC,IAAD,CAAOY,KAAK,SAASC,UAAWZ,IAChC,kBAAC,IAAD,CAAOW,KAAK,UAAUC,UAAWX,IACjC,kBAAC,IAAD,CAAOU,KAAK,QAAQC,UAAWV,IAC/B,kBAAC,IAAD,CAAOS,KAAK,SAASC,UAAWT,IAChC,kBAAC,IAAD,CAAUR,GAAG,e,GAxBXG,a,OCREe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFZ,SAASa,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.7ce86537.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Styled from 'styled-components';\nimport { Divider } from 'semantic-ui-react';\n\n\nconst Title = Styled.h1`\n  transition: all 200ms ease-in-out;\n  &:hover,&.active {\n    color: red;\n  }\n`\n\nconst Nav = Styled(Link)`\n  transition: all 200ms ease-in-out;\n  &:hover,&.active {\n    color: #6E1D1E;\n    text-decoration: underline overline;\n  }\n  &.active {\n    color: red;\n  }\n`\n\nconst TitleMOBILE = Styled.h1`\n  transition: all 200ms ease-in-out;\n  &:hover,&.active {\n    color: red;\n  }\n`\n\nconst NavMOBILE = Styled(Link)`\n  transition: all 200ms ease-in-out;\n  &:hover,&.active {\n    color: #6E1D1E;\n    text-decoration: underline overline;\n  }\n  &.active {\n    color: red;\n  }\n`\n\n\nclass TopMenu extends Component {\n  render() {\n    return(\n      <>\n        <div id='topMenuMainContainer'>\n          <Nav to={'/about'} className='topMenuNav'>ABOUT</Nav>\n          <Divider />\n          <hr />\n          <Nav to={'/social'} className='topMenuNav'>SOCIAL</Nav>\n          <Divider />\n          <hr />\n          <Link to={'/'}>\n            <Title id='topMenuTitle'>Untitled_Band</Title>\n          </Link>\n          <hr />\n          <Nav to={'/tour'} className='topMenuNav'>TOUR</Nav>\n          <Divider />\n          <hr />\n          <Nav to={'/merch'} className='topMenuNav'>MERCH</Nav>\n        </div>\n\n        <div id='topMenuMainContainerMOBILE'>\n          <Link to={'/'}>\n            <TitleMOBILE id='topMenuTitleMOBILE'>Untitled_Band</TitleMOBILE>\n          </Link>\n          <div id='topMenuNavContainerMOBILE'>\n            <NavMOBILE to={'/about'} className='topMenuNavMOBILE'>ABOUT</NavMOBILE>\n            <Divider />\n            <hr className='hrMOBILE' />\n            <NavMOBILE to={'/social'} className='topMenuNavMOBILE'>SOCIAL</NavMOBILE>\n            <Divider />\n            <hr className='hrMOBILE' />\n            <NavMOBILE to={'/tour'} className='topMenuNavMOBILE'>TOUR</NavMOBILE>\n            <Divider />\n            <hr className='hrMOBILE' />\n            <NavMOBILE to={'/merch'} className='topMenuNavMOBILE'>MERCH</NavMOBILE>\n            </div>\n        </div>\n      </>\n    )\n  }\n}\n\n\nexport default TopMenu;\n","import React, { Component } from 'react';\n\n\nclass Home extends Component {\n  render() {\n    return(\n      <h1 id='homeTitle'>Home</h1>\n    )\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\n\nclass About extends Component {\n  render() {\n    return(\n      <h1 id='aboutUsTitle'>About</h1>\n    )\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\n\nclass Social extends Component {\n  render() {\n    return(\n      <h1 id='socialTitle'>Social</h1>\n    )\n  }\n}\n\nexport default Social;\n","import React, { Component } from 'react';\n\n\nclass Tour extends Component {\n  render() {\n    return(\n      <h1 id='tourTitle'>Tour</h1>\n    )\n  }\n}\n\nexport default Tour;\n","import React, { Component } from 'react';\n\n\nclass Merch extends Component {\n  render() {\n    return(\n      <h1 id='merchTitle'>Merch</h1>\n    )\n  }\n}\n\nexport default Merch;\n","import React, { Component } from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  Router\n} from 'react-router-dom';\nimport { ScrollManager, WindowScroller } from 'react-scroll-manager';\nimport { createBrowserHistory as createHistory } from 'history';\nimport './App.css';\n\nimport TopMenu from './menus/TopMenu';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Social from './pages/Social';\nimport Tour from './pages/Tour';\nimport Merch from './pages/Merch';\n\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    document.title='Untitled_Band'\n  }\n\n  constructor() {\n    super();\n    this.history = createHistory();\n  }\n\n  render() {\n    return (\n      <ScrollManager history={this.history}>\n        <Router history={this.history}>\n          <WindowScroller>\n            <div id='appMainContainer'>\n              <TopMenu />\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/about' component={About} />\n                <Route path='/social' component={Social} />\n                <Route path='/tour' component={Tour} />\n                <Route path='/merch' component={Merch} />\n                <Redirect to='/' />\n              </Switch>\n            </div>\n          </WindowScroller>\n        </Router>\n      </ScrollManager>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}